function kennlinie_spec

KL_LOOKUP_LINE_NUMERIC_NUMERIC.x = [-10 0   100];
KL_LOOKUP_LINE_NUMERIC_NUMERIC.y = [2  -0.1 2.1];

KL_LOOKUP_LINE_TEXT_NUMERIC.x = {'foo', 'bar', 'baz'};
KL_LOOKUP_LINE_TEXT_NUMERIC.y = [1  -10.2 5];

KL_LOOKUP_LINE_NUMERIC_TEXT.x = [1 2 3];
KL_LOOKUP_LINE_NUMERIC_TEXT.y = {'foo', 'bar', 'baz'};

KL_LOOKUP_LINE_TEXT_TEXT.x = {'a', 'b', 'c'};
KL_LOOKUP_LINE_TEXT_TEXT.y = {'foo', 'bar', 'baz'};

% Save labels to a temporary file
save('tmp.mat', '-regexp', '^KL');

% Export using mat2dcm
mat2dcm('tmp.mat', 'tmp.dcm', ...
  'Precision', '%1.3f', ...
  'Prefix', '', ...
  'Verbose', false);
filecontent = regexprep(fileread('tmp.dcm'), '\r', '');

% KENNLINIE numeric/numeric
myassert(~isempty(regexp(filecontent, [...
'KENNLINIE KL_LOOKUP_LINE_NUMERIC_NUMERIC 3\n' ...
'   ST/X   -10.000   0.000   100.000\n' ...
'   WERT   2.000   -0.100   2.100\n' ...
'END\n' ...
])));

% KENNLINIE text/numeric
myassert(~isempty(regexp(filecontent, [...
'KENNLINIE KL_LOOKUP_LINE_TEXT_NUMERIC 3\n' ...
'   ST_TX/X   "foo"   "bar"   "baz"\n' ...
'   WERT   1.000   -10.200   5.000\n' ...
'END\n' ...
])));

% KENNLINIE numeric/text
myassert(~isempty(regexp(filecontent, [...
'KENNLINIE KL_LOOKUP_LINE_NUMERIC_TEXT 3\n' ...
'   ST/X   1.000   2.000   3.000\n' ...
'   TEXT   "foo"   "bar"   "baz"\n' ...
'END\n' ...
])));

% KENNLINIE text/text
myassert(~isempty(regexp(filecontent, [...
'KENNLINIE KL_LOOKUP_LINE_TEXT_TEXT 3\n' ...
'   ST_TX/X   "a"   "b"   "c"\n' ...
'   TEXT   "foo"   "bar"   "baz"\n' ...
'END\n' ...
])));

